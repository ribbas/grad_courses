@startuml

skinparam linetype polyline
skinparam linetype ortho
left to right direction
skinparam backgroundColor transparent
skinparam classBackgroundColor fff

namespace Information_Retrieval {

  class CorpusFile {
    + ingest(filename: Path, ngram: int, normalize: bool): list[set[int]]
    + dump_clusters(filename: str, data: list[set[int]])
    + read_clusters(filename: str): set[frozenset[int]]
  }

  class Normalizer {
    - chosen_stemmer: nltk.stem.PorterStemmer | nltk.stem.SnowballStemmer
    - punc_table: dict[int, int | None]
    + __init__(stemmer: str, stopwords: str)
    - to_lower_case(document: str): str
    - split_document(document: str): list[str]
    - expand_contractions(tokens: list[str]): list[str]
    - remove_puncs(tokens: list[str]): list[str]
    - stem(tokens: list[str]): list[str]
    + __call__(document: str): list[str]
  }

  class Shingle {
    + __init__(ngram)
    - ngrams(input_list): Iterator[tuple[str, ...]]
    + __call__(doc: list[str]): set[int]
  }

  class MinHash {
    + __init__(shingle_sets: list[set[int]])
    - hash_func_coeffs(): list[tuple[int, int]]
    + generate_signatures()
    + compare_signatures()
    + find_clusters(): list[set[int]]
  }

  class IR {
    - filename: Path
    - docs: list[set[int]]
    - clusters: list[set[int]]
    + __init__(filename: Path)
    + ingest(ngrams: int, normalize: bool)
    + generate_signatures()
    + sort_clusters()
    + dump_clusters()
    + score(golden_file: Path): tuple[int, int]
  }

  IR <-- CorpusFile
  IR <-- MinHash
  CorpusFile <-l- Normalizer
  CorpusFile <-l- Shingle
}

@enduml