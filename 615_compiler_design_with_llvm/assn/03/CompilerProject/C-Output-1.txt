(program (declaration_list (declaration_list (declaration (fun_declaration (type_specifier int) gcd ( (params (param_list (param_list (param (type_specifier int) u)) , (param (type_specifier int) v))) ) (compound_statement { local_declarations (statement_list (statement (selection_statement if ( (expression (simple_expression (additive_expression (term (factor (var v)))) (relop ==) (additive_expression (term (factor 0))))) ) (statement (return_statement return (expression (simple_expression (additive_expression (term (factor (var u)))))) ;)) else (statement (return_statement return (expression (simple_expression (additive_expression (term (factor (call gcd ( (args (arg_list (arg_list (expression (simple_expression (additive_expression (term (factor (var v))))))) , (expression (simple_expression (additive_expression (additive_expression (term (factor (var u)))) (addop -) (term (term (term (factor (var u))) (mulop /) (factor (var v))) (mulop *) (factor (var v)))))))) ))))))) ;))))) })))) (declaration (fun_declaration (type_specifier void) main ( (params void) ) (compound_statement { (local_declarations (var_declaration (type_specifier int) x ;) (var_declaration (type_specifier int) y ;)) (statement_list (statement (expression_statement (expression (var x) = (expression (simple_expression (additive_expression (term (factor (call input ( args )))))))) ;)) (statement (expression_statement (expression (var y) = (expression (simple_expression (additive_expression (term (factor (call input ( args )))))))) ;)) (statement (expression_statement (expression (simple_expression (additive_expression (term (factor (call output ( (args (arg_list (expression (simple_expression (additive_expression (term (factor (call gcd ( (args (arg_list (arg_list (expression (simple_expression (additive_expression (term (factor (var x))))))) , (expression (simple_expression (additive_expression (term (factor (var y)))))))) ))))))))) ))))))) ;))) })))))
