(program (declaration_list (declaration_list (declaration_list (declaration_list (declaration (var_declaration (type_specifier int) x [ 10 ] ;))) (declaration (fun_declaration (type_specifier int) minloc ( (params (param_list (param_list (param_list (param (type_specifier int) a [ ])) , (param (type_specifier int) low)) , (param (type_specifier int) high))) ) (compound_statement { (local_declarations (local_declarations (local_declarations local_declarations (var_declaration (type_specifier int) i ;)) (var_declaration (type_specifier int) x ;)) (var_declaration (type_specifier int) k ;)) (statement_list (statement_list (statement_list (statement_list (statement_list statement_list (statement (expression_statement (expression (var k) = (expression (simple_expression (additive_expression (term (factor (var low))))))) ;))) (statement (expression_statement (expression (var x) = (expression (simple_expression (additive_expression (term (factor (var a [ (expression (simple_expression (additive_expression (term (factor (var low)))))) ]))))))) ;))) (statement (expression_statement (expression (var i) = (expression (simple_expression (additive_expression (additive_expression (term (factor (var low)))) (addop +) (term (factor 1)))))) ;))) (statement (iteration_statement while ( (expression (simple_expression (additive_expression (term (factor (var i)))) (relop <) (additive_expression (term (factor (var high)))))) ) (statement (compound_statement { local_declarations (statement_list (statement_list statement_list (statement (selection_statement if ( (expression (simple_expression (additive_expression (term (factor (var a [ (expression (simple_expression (additive_expression (term (factor (var i)))))) ])))) (relop <) (additive_expression (term (factor (var x)))))) ) (statement (compound_statement { local_declarations (statement_list (statement_list statement_list (statement (expression_statement (expression (var x) = (expression (simple_expression (additive_expression (term (factor (var a [ (expression (simple_expression (additive_expression (term (factor (var i)))))) ]))))))) ;))) (statement (expression_statement (expression (var k) = (expression (simple_expression (additive_expression (term (factor (var i))))))) ;))) }))))) (statement (expression_statement (expression (var i) = (expression (simple_expression (additive_expression (additive_expression (term (factor (var i)))) (addop +) (term (factor 1)))))) ;))) }))))) (statement (return_statement return (expression (simple_expression (additive_expression (term (factor (var k)))))) ;))) })))) (declaration (fun_declaration (type_specifier void) sort ( (params (param_list (param_list (param_list (param (type_specifier int) a [ ])) , (param (type_specifier int) low)) , (param (type_specifier int) high))) ) (compound_statement { (local_declarations (local_declarations local_declarations (var_declaration (type_specifier int) i ;)) (var_declaration (type_specifier int) k ;)) (statement_list (statement_list statement_list (statement (expression_statement (expression (var i) = (expression (simple_expression (additive_expression (term (factor (var low))))))) ;))) (statement (iteration_statement while ( (expression (simple_expression (additive_expression (term (factor (var i)))) (relop <) (additive_expression (additive_expression (term (factor (var high)))) (addop -) (term (factor 1))))) ) (statement (compound_statement { (local_declarations local_declarations (var_declaration (type_specifier int) t ;)) (statement_list (statement_list (statement_list (statement_list (statement_list statement_list (statement (expression_statement (expression (var k) = (expression (simple_expression (additive_expression (term (factor (call minloc ( (args (arg_list (arg_list (arg_list (expression (simple_expression (additive_expression (term (factor (var a))))))) , (expression (simple_expression (additive_expression (term (factor (var i))))))) , (expression (simple_expression (additive_expression (term (factor (var high)))))))) )))))))) ;))) (statement (expression_statement (expression (var t) = (expression (simple_expression (additive_expression (term (factor (var a [ (expression (simple_expression (additive_expression (term (factor (var k)))))) ]))))))) ;))) (statement (expression_statement (expression (var a [ (expression (simple_expression (additive_expression (term (factor (var k)))))) ]) = (expression (simple_expression (additive_expression (term (factor (var a [ (expression (simple_expression (additive_expression (term (factor (var i)))))) ]))))))) ;))) (statement (expression_statement (expression (var a [ (expression (simple_expression (additive_expression (term (factor (var i)))))) ]) = (expression (simple_expression (additive_expression (term (factor (var t))))))) ;))) (statement (expression_statement (expression (var i) = (expression (simple_expression (additive_expression (additive_expression (term (factor (var i)))) (addop +) (term (factor 1)))))) ;))) }))))) })))) (declaration (fun_declaration (type_specifier void) main ( (params void) ) (compound_statement { (local_declarations local_declarations (var_declaration (type_specifier int) i ;)) (statement_list (statement_list (statement_list (statement_list (statement_list statement_list (statement (expression_statement (expression (var i) = (expression (simple_expression (additive_expression (term (factor 0)))))) ;))) (statement (iteration_statement while ( (expression (simple_expression (additive_expression (term (factor (var i)))) (relop <) (additive_expression (term (factor 10))))) ) (statement (compound_statement { local_declarations (statement_list (statement_list statement_list (statement (expression_statement (expression (var x [ (expression (simple_expression (additive_expression (term (factor (var i)))))) ]) = (expression (simple_expression (additive_expression (term (factor (call input ( args )))))))) ;))) (statement (expression_statement (expression (var i) = (expression (simple_expression (additive_expression (additive_expression (term (factor (var i)))) (addop +) (term (factor 1)))))) ;))) }))))) (statement (expression_statement (expression (simple_expression (additive_expression (term (factor (call sort ( (args (arg_list (arg_list (arg_list (expression (simple_expression (additive_expression (term (factor (var x))))))) , (expression (simple_expression (additive_expression (term (factor 0)))))) , (expression (simple_expression (additive_expression (term (factor 10))))))) ))))))) ;))) (statement (expression_statement (expression (var i) = (expression (simple_expression (additive_expression (term (factor 0)))))) ;))) (statement (iteration_statement while ( (expression (simple_expression (additive_expression (term (factor (var i)))) (relop <) (additive_expression (term (factor 10))))) ) (statement (compound_statement { local_declarations (statement_list (statement_list statement_list (statement (expression_statement (expression (simple_expression (additive_expression (term (factor (call output ( (args (arg_list (expression (simple_expression (additive_expression (term (factor (var x [ (expression (simple_expression (additive_expression (term (factor (var i)))))) ])))))))) ))))))) ;))) (statement (expression_statement (expression (var i) = (expression (simple_expression (additive_expression (additive_expression (term (factor (var i)))) (addop +) (term (factor 1)))))) ;))) }))))) })))))
