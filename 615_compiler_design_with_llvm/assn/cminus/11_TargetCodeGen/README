# Week 12: Compiler Project Target Code Generation

The ANTLR4 tool was installed and ran using the instructions in the official documentations, https://github.com/antlr/antlr4/blob/master/doc/getting-started.md.

The tool and its dependencies were installed on the system using `apt`.

## Modifications made for the assignment

1. The method `void generateObject(std::string objName)` was added to the `CminusBaseVisitor` class to generate target code for the machine.
2. The IR code for the external IO functions for C- were added to `C-IO.ll`. The IR of `int input(void)` and `void output(int)` were added to the file. The file is compiled into bytecode using the following command:

```
llc -filetype=obj C-IO.ll -o io.o
```

## Output files

The object file is generated as `C-Input-X.o`, where `X` is the name of the input file in `C-Input-files`. The object is compiled with the external IO object using the following command:

```
clang io.o C-Input-X.o -o C-Input-X
```

## System

The attached CMakeLists.txt was used to compile the assignment files. The following are the version numbers of the tools used:

| Tool    | Version |
| ------- | ------- |
| Clang++ | 14.0.0  |
| CMake   | 3.22.2  |

The target machine used was an Ubuntu 20.04 64-bit virtual machine. The Linux kernel version is 5.13.0-39-generic. The following output is generated from running the command `uname -orm`:

```
5.13.0-39-generic x86_64 GNU/Linux
```
