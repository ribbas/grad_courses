// BNF for Builder input.
// Notes: Any error should be reported. If an error
// occures, the run should continue to the <END_FILE>.
// Scanner must recognize CR and END_FILE as tokens.

<ScanFile> => <ScannLine>* END_FILE

<ScannLine> => <NamelistCommand>
             | <inactiveLine> 

<inactiveLine> => <endLine>

<endLine> => CR | END_FILE

<NamelistCommand> => NAMELIST <StructName> <NamelistAction>

<StructName> => ID   # must match name of Namelist Structure in application.

<NamelistAction> => EQUAL DEFALUTS <endLine>   # reset defaults if DEFAULTS is specified.
                  | LFBRK CR <NameValueList> RTBRK <endLine> 

<NameValueList> => <NameValueLine>* 

<NameValueLine> => <MemberName> EQUAL <Value> CR  # Set member to value specified if valid.
                 | CR

<MemberName> => ID [ LFSQBKT NUM RTSQBKT ]   # ID must match name of member in <StructName> structure.
                   # Member will have a type and array size. 
                   # If array size is greater than zero, subscript is required and NUM must be within array size.

<Value> => <booleanValue>  # Type of value must match type of member.
        | <integerValue>
        | <stringValue>

<booleanValue> => TRUE | FALSE
<integerValue> => NUM
<stringValue> => TEXT


enum TokenKinds { UNK, END_FILE, CR, STARTCOM, EQUAL, DQUOTE, LFGRK, RTBRK, SEMI, 
    LFSQBKT, RTSQBKT, NMLST, DEFAULTS, TRUE, FALSE, ID, NUM, TXT, ERROR };

